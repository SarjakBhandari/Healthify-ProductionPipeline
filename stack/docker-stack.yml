version: "3.2"

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: healthify
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - healthify_net
    deploy:
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    image: healthify-backend:latest
    environment:
      PORT: 5050
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: healthify
      JWT_SECRET: healthify
      EXPIRES_IN: 24h
    ports:
      - "5050:5050"
    networks:
      - healthify_net
    depends_on:
      - postgres
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5050/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  frontend:
    image: healthify-frontend:latest
    environment:
      API_BASE_URL: http://192.168.40.4:5050/api
    ports:
      - "5173:5173"
    networks:
      - healthify_net
    depends_on:
      - backend
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5173 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  pgdata:

networks:
  healthify_net:
    driver: overlay
