version: "3.2"

services:
  prometheus:
    image: prom/prometheus:v2.51.2
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    networks:
      - healthify_net
    ports:
      - target: 9090
        published: 9090
        protocol: tcp
        mode: host
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  grafana:
    image: grafana/grafana:10.4.2
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - healthify_net
    ports:
      - target: 3000
        published: 3000
        protocol: tcp
        mode: host
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  node-exporter:
    image: prom/node-exporter:v1.7.0
    networks:
      - healthify_net
    ports:
      - target: 9100
        published: 9100
        protocol: tcp
        mode: host
    deploy:
      mode: global
      restart_policy:
        condition: on-failure

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.15.0
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:postgres@postgres:5432/healthify?sslmode=disable"
    networks:
      - healthify_net
    ports:
      - target: 9187
        published: 9187
        protocol: tcp
        mode: host
    depends_on:
      - postgres  # assumes Healthify stack has a service named 'postgres'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

volumes:
  grafana_data:

networks:
  healthify_net:
    external: true
