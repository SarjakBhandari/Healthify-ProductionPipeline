---
- name: Ensure Docker is running on all nodes
  hosts: all
  become: yes
  tasks:
    - name: Ensure Docker service is running
      service:
        name: docker
        state: started
        enabled: yes

- name: Deploy Healthify Stack from Manager
  hosts: manager
  become: yes
  tasks:
    - name: Remove existing Healthify stack (if any)
      shell: docker stack rm healthify || true
      args:
        executable: /bin/bash
      ignore_errors: true

    - name: Wait for Healthify stack removal to complete
      shell: |
        while docker stack services healthify 2>/dev/null | grep -q .; do
          echo "Waiting for Healthify stack to be removed..."
          sleep 2
        done
      args:
        executable: /bin/bash

    - name: Create Healthify deployment directory
      file:
        path: /home/jenkins/healthify-stack
        state: directory
        owner: jenkins
        group: jenkins
        mode: '0755'

    - name: Copy Healthify stack file to manager
      copy:
        src: ./stack/docker-stack.yml
        dest: /home/jenkins/healthify-stack/docker-stack.yml
        owner: jenkins
        group: jenkins
        mode: '0644'

    - name: Deploy Healthify stack
      shell: docker stack deploy -c /home/jenkins/healthify-stack/docker-stack.yml healthify
      args:
        warn: false
      register: deploy_result
      changed_when: "'Updating' in deploy_result.stdout or 'Creating' in deploy_result.stdout"

    - name: Display Healthify deployment output
      debug:
        var: deploy_result.stdout_lines


- name: Deploy Monitoring Stack with Config Overwrite
  hosts: manager
  become: yes
  tasks:
    - name: Create monitoring deployment directory
      file:
        path: /home/jenkins/monitoring-stack
        state: directory
        owner: jenkins
        group: jenkins
        mode: '0755'

    - name: Copy Grafana datasource provisioning file
      copy:
        src: "./stack/grafana/datasources/prometheus.yml"
        dest: /home/jenkins/monitoring-stack/prometheus-datasource.yml
        owner: jenkins
        group: jenkins
        mode: '0644'

    - name: Copy Grafana dashboard provisioning file
      copy:
        src: "./stack/grafana/dashboards/grafana.yml"
        dest: /home/jenkins/monitoring-stack/grafana-dashboard.yml
        owner: jenkins
        group: jenkins
        mode: '0644'

    - name: Copy Grafana dashboard JSONs
      copy:
        src: "./stack/grafana/dashboards/json/"
        dest: /home/jenkins/monitoring-stack/dashboards/json/
        owner: jenkins
        group: jenkins
        mode: '0644'

    - name: Copy monitoring.yml to manager
      copy:
        src: "./stack/monitoring.yml"
        dest: /home/jenkins/monitoring-stack/monitoring.yml
        owner: jenkins
        group: jenkins
        mode: '0644'

    - name: Copy Prometheus config
      copy:
        src: "./stack/prometheus/prometheus.yml"
        dest: /home/jenkins/monitoring-stack/prometheus.yml
        owner: jenkins
        group: jenkins
        mode: '0644'

    - name: Copy Alert rules config
      copy:
        src: "./stack/prometheus/alert.rules.yml"
        dest: /home/jenkins/monitoring-stack/alert.rules.yml
        owner: jenkins
        group: jenkins
        mode: '0644'

    - name: Remove monitoring stack (to release configs)
      shell: docker stack rm monitoring || true
      args:
        executable: /bin/bash
      ignore_errors: true

    - name: Wait for stack removal to complete
      shell: |
        while docker stack services monitoring 2>/dev/null | grep -q .; do sleep 2; done
      args:
        executable: /bin/bash

    - name: Remove existing Prometheus config
      shell: docker config rm prometheus.yml || true
      ignore_errors: true

    - name: Create fresh Prometheus config
      shell: docker config create prometheus.yml /home/jenkins/monitoring-stack/prometheus.yml

    - name: Remove existing Alert rules config
      shell: docker config rm alert.rules.yml || true
      ignore_errors: true

    - name: Create fresh Alert rules config
      shell: docker config create alert.rules.yml /home/jenkins/monitoring-stack/alert.rules.yml

    - name: Remove existing Grafana datasource config
      shell: docker config rm prometheus-datasource.yml || true
      ignore_errors: true

    - name: Create fresh Grafana datasource config
      shell: docker config create prometheus-datasource.yml /home/jenkins/monitoring-stack/prometheus-datasource.yml

    - name: Remove existing Grafana dashboard config
      shell: docker config rm grafana-dashboard.yml || true
      ignore_errors: true

    - name: Create fresh Grafana dashboard config
      shell: docker config create grafana-dashboard.yml /home/jenkins/monitoring-stack/grafana-dashboard.yml

    - name: Deploy monitoring stack
      shell: docker stack deploy -c /home/jenkins/monitoring-stack/monitoring.yml monitoring
      args:
        warn: false
