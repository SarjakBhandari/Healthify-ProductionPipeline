---
- name: Ensure Docker is running on all nodes
  hosts: all
  become: yes
  tasks:
    - name: Ensure Docker service is running
      service:
        name: docker
        state: started
        enabled: yes

- name: Initialize swarm on manager (if not already)
  hosts: manager
  become: yes
  tasks:
    - name: Initialize Docker Swarm
      shell: docker swarm init --advertise-addr {{ ansible_host }}
      args:
        warn: false
      register: swarm_init
      failed_when: "'Error response from daemon: This node is already part of a swarm' not in swarm_init.stderr"

- name: Join workers to swarm
  hosts: workers
  become: yes
  tasks:
    - name: Get join token from manager
      shell: docker swarm join-token -q worker
      delegate_to: 192.168.50.4
      register: worker_token

    - name: Join swarm as worker
      shell: docker swarm join --token {{ worker_token.stdout }} 192.168.50.4:2377
      args:
        warn: false
      register: join_result
      changed_when: "'This node joined a swarm as a worker' in join_result.stdout"

- name: Deploy Healthify Stack from Manager
  hosts: manager
  become: yes
  tasks:
    - name: Create deployment directory on manager
      file:
        path: /home/jenkins/healthify-stack
        state: directory
        owner: jenkins
        group: jenkins
        mode: 0755

    - name: Copy stack file to manager
      copy:
        src: ./stack/docker-stack.yml
        dest: /home/jenkins/healthify-stack/docker-stack.yml
        owner: jenkins
        group: jenkins
        mode: 0644

    - name: Deploy Healthify stack
      shell: docker stack deploy -c /home/jenkins/healthify-stack/docker-stack.yml healthify
      args:
        warn: false
      register: deploy_result
      changed_when: "'Updating' in deploy_result.stdout or 'Creating' in deploy_result.stdout"

    - name: Display deployment output
      debug:
        var: deploy_result.stdout_lines
